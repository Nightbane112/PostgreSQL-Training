Database:
------------------

internal storage:

small info: internal files (txt, csv)

Huge amount of Information: Database

2 types

1. Relational (structural) Database
--------------------------------------

Table: storing info in the form of rows and columns

columns: fields / tuples

rows: records

can create multiple tables

(Customer, Products, Order) relationship between these tables

examples: MYSQL, Oracle, PostSQL, MS SQL Server

2. non- structural (non-relational)

store info JSON, BSON, key-value, wide column

(data visulization, Data analytics)

example: Mongo DB, Couch DB, Casandra, Postgre

sudo systemctl status postgresql

Create Database myDB


Create Table
-------------------------------------

create table student (
    id serial PRIMARY KEY,
    firstname varchar(50),
    lastname varchar(50),
    email varchar(50)
)

_____________________________________________________

Insert Records

insert into student (firstname,lastname,email) values
('sonam','soni','sonam@gmail.com')

_____________________________________________________________________

Constraints

1. NotNull: Column can not hold the Null values.

CREATE TABLE Customer(
    cust_id serial PRIMARY KEY NOT NULL,
    name varchar(50) not null,
    age int not null,
    address varchar(255)
)

insert into customer (name,age,address) values ('Sonam',23,'Mumbai India')

try to insert null values

insert into customer (age,address) values (23,'Mumbai India')
//it will throw and error
insert into customer (name,age,address) values (null,23,'Mumbai India')
//also throw error


2. Check Constraint

check the values while inserting data in table

Alter TABLE Customer add salary REAL check (salary>0)

insert into customer (name,age,address,salary) values ('Aniss',23,'Mumbai India',-1000)
//give error

insert into customer (name,age,address,salary) values ('Aniss',23,'Mumbai India',250000.20)

3. unique constraint

give some unique info which will not duplicates

alter table customer add email varchar(50) not null unique

insert into customer (name,age,address,salary,email) 
values ('Aniss',23,'Mumbai India',25000.400
       ,'aniss@gmail.com')

(execute twice to check the unique error)

_________________________________________________________________________________________

Clean the table: 

>truncate table customer

(delete all the records)

delete table with structure then

>drop table customer 

>drop database myDB

______________________________________________________________________________

foreign key constraint

we already have a customer table so now let's create Product Table

create table product(
    id serial primary key,
    name varchar(100),
    price real,
    description varchar(300)
    
)

create table ordertable(
    order_id serial primary key,
    cid int references customer(cust_id),
    pid int references product(id)
)

[custid of customer table is FK in ordertable, product id in product table is FK in ordertable]

Insert some recorda in Customer and Product table check the ids and  insert records in ordertable accordingly

insert into ordertable(cid,pid) values (7,2)

fetch the data and check again.

*******************************String Function **********************************************

while selecting data from Database we can format them using the string functions which are available
in postgreSQL

1. UPPER
2. LOWER

>select Upper(name) as name,lower(email) as email  from customer

>select Upper(name) name,lower(email) email  from customer

>select name,initcap(description) from product

>select initcap(concat(firstname,' ',lastname)) as fullname from student

>select length(trim('     Welcome to the world of POSTgres       '))
>select length( trim( LEADING   from 
                    '     Welcome to the world of POSTgres       '))
>select length( trim( TRAILING   from 
                    '     Welcome to the world of POSTgres       '))
                    
>select length(trim('     Welcome to POSTgres       ')) btrim,
length(trim( LEADING   from '     Welcome to POSTgres       ')) ltrim,
length(trim( TRAILING   from '     Welcome to POSTgres       ')) rtrim

>format ('hello %s','my text')
>select format ('%s, %s',lastname,firstname) fullname from student

>select left ('Wecome,GoodMorning',6);
>select right ('Wecome,GoodMorning',11);

>select ASCII('A') as ascii , CHR(65) as character

>select position('m' in firstname ) as postion, firstname from student

>select replace(firstname,'s','S') from student

>select reverse(firstname) from student

>select substring(address,8) from customer

******************************** Aggregate Functions *****************************************

1. AVG function

>select avg(replacement_cost) from film

>select round(avg(replacement_cost),2) avg_cost from film

2. Count function

>select count(*) from film;

3. Max function

>select max(replacement_cost) max_cost, 
min(replacement_cost) min_cost from film

>select film_id, title,replacement_cost from film
where
    replacement_cost = (select max(replacement_cost) from film)
    
order by title;

4. Min function

>select film_id, title,replacement_cost from film
where
    replacement_cost = (select min(replacement_cost) from film)
    
order by title;

5. Sum function


















































